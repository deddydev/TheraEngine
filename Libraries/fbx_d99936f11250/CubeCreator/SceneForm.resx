<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAAAGABoAwAANgAAACAgAAAAAAgAqAgAAJ4DAAAQEBAAAAAEACgBAABGDAAAKAAAABAA
        AAAgAAAAAQAYAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAKioqKSkpKSkpJ+fn5+fn5qampWVlZWVlY6O
        jomJiYODg4GBgXx8fHt7e3Z2dmdnZ6WlpZ6enp+fn15eXpOTk4yMjImJiYSEhHt7e3d3d3Nzc2tra2Vl
        ZWBgYFpaWkJCQqWlpaOjo52dnSYmJm9vb4yMjIaGhoSEhHt7e3l5eXNzc2tra2RkZGBgYFpaWkJCQqWl
        paOjo5ycnJeXlwgICIiIiIqKioSEhHt7e3V1dXJycmtra2VlZV5eXlpaWkJCQqWlpaWlpZycnJWVlVNT
        U1xcXImJiYKCgn9/f3h4eGtra2NjY2ZmZmNjY1paWkJCQqWlpaWlpZycnJSUlJOTkwMDA3x8fCMjIwkJ
        CTg4OFFRUVtbW2RkZGNjY1paWkJCQqWlpaWlpZycnJWVlZOTk2hoaAAAAG9vb3x8fHZ2dm9vb2tra2Zm
        ZmNjY1paWkJCQqWlpaSkpJycnJSUlJKSkggICDMzM1xcXH5+fnZ2dnNzc2xsbGVlZWNjY1paWkJCQqWl
        paCgoJycnJSUlCMjI319fYmJiQUFBW5ubnZ2dnNzc2tra2ZmZmFhYVpaWkJCQqWlpaOjo5ycnJSUlBMT
        E4mJiYiIiIGBgQMDA3BwcHNzc2tra2pqamJiYlpaWkJCQqWlpaWlpZycnISEhFBQUIyMjIiIiISEhGtr
        awwMDG9vb2tra2ZmZmJiYlpaWkJCQqWlpaCgoJycnFZWVm1tbY2NjYKCgnJycn19fUhISBsbG2lpaWlp
        aWNjY1paWkJCQqWlpaOjo5ycnFBQUHd3d42NjQAAAAAAAG5ubnh4eCUlJScnJ2VlZWNjY1paWkJCQqWl
        paOjo5ycnJaWlpOTk4yMjA4ODgAAAHNzc3l5eXJychsbGyAgIF9fX1paWkJCQqWlpaGhoZycnJWVlZSU
        lIyMjIqKioSEhH9/f3t7e3Jycm1tbScnJyIiIlpaWkNDQ6WlpaOjo5ycnJeXl5SUlI+Pj4iIiISEhHx8
        fHp6enR0dGxsbGlpaWRkZFpaWkZGRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAQAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwADA3MAA8MqmAAQEBAAICAgADAwMABER
        EQAWFhYAHBwcACIiIgApKSkAVVVVAE1NTQBCQkIAOTk5AIB8/wBQUP8AkwDWAP/szADG1u8A1ufnAJCp
        rQAAADMAAABmAAAAmQAAAMwAADMAAAAzMwAAM2YAADOZAAAzzAAAM/8AAGYAAABmMwAAZmYAAGaZAABm
        zAAAZv8AAJkAAACZMwAAmWYAAJmZAACZzAAAmf8AAMwAAADMMwAAzGYAAMyZAADMzAAAzP8AAP9mAAD/
        mQAA/8wAMwAAADMAMwAzAGYAMwCZADMAzAAzAP8AMzMAADMzMwAzM2YAMzOZADMzzAAzM/8AM2YAADNm
        MwAzZmYAM2aZADNmzAAzZv8AM5kAADOZMwAzmWYAM5mZADOZzAAzmf8AM8wAADPMMwAzzGYAM8yZADPM
        zAAzzP8AM/8zADP/ZgAz/5kAM//MADP//wBmAAAAZgAzAGYAZgBmAJkAZgDMAGYA/wBmMwAAZjMzAGYz
        ZgBmM5kAZjPMAGYz/wBmZgAAZmYzAGZmZgBmZpkAZmbMAGaZAABmmTMAZplmAGaZmQBmmcwAZpn/AGbM
        AABmzDMAZsyZAGbMzABmzP8AZv8AAGb/MwBm/5kAZv/MAMwA/wD/AMwAmZkAAJkzmQCZAJkAmQDMAJkA
        AACZMzMAmQBmAJkzzACZAP8AmWYAAJlmMwCZM2YAmWaZAJlmzACZM/8AmZkzAJmZZgCZmZkAmZnMAJmZ
        /wCZzAAAmcwzAGbMZgCZzJkAmczMAJnM/wCZ/wAAmf8zAJnMZgCZ/5kAmf/MAJn//wDMAAAAmQAzAMwA
        ZgDMAJkAzADMAJkzAADMMzMAzDNmAMwzmQDMM8wAzDP/AMxmAADMZjMAmWZmAMxmmQDMZswAmWb/AMyZ
        AADMmTMAzJlmAMyZmQDMmcwAzJn/AMzMAADMzDMAzMxmAMzMmQDMzMwAzMz/AMz/AADM/zMAmf9mAMz/
        mQDM/8wAzP//AMwAMwD/AGYA/wCZAMwzAAD/MzMA/zNmAP8zmQD/M8wA/zP/AP9mAAD/ZjMAzGZmAP9m
        mQD/ZswAzGb/AP+ZAAD/mTMA/5lmAP+ZmQD/mcwA/5n/AP/MAAD/zDMA/8xmAP/MmQD/zMwA/8z/AP//
        MwDM/2YA//+ZAP//zABmZv8AZv9mAGb//wD/ZmYA/2b/AP//ZgAhAKUAX19fAHd3dwCGhoYAlpaWAMvL
        ywCysrIA19fXAN3d3QDj4+MA6urqAPHx8QD4+PgA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A
        /wD//wAA////AO3v7/f39/eSkpKSkpLt7e3t7Ozs7Ozs7Pj4+Pj46+tt7Pf3kpKS7e3t7ezs7Ozs7Pj4
        +Ovr621tbW1t6urqEhTs9/eSkpLs6uzt7ezs7Ozs7Pj46+vrbW1tbW1t6uoSFOz39/eSkuoKFezs7Ozs
        7Ozs+Pjr6+ttbW1tberq6hIU7Pf395KS7RAKbezs7Ozs7Oz4+Pjr621tbW1tberqEhTs9/f3kpKS+AoV
        7Ozs7Ozs7Pj4+OvrbW1tbW3q6uoSFOz39/eSkpLtFQxt7Ozs7Ozs+Pjr6+ttbW1tberq6hIU7Pf39/eS
        ku3sDBH47Ozs7Oz4+Ovr621tbW1tberqEhTs9/f395KS7e0SCurs7Ozs7Pj4+OttbW1tbW1t6uoSFOz3
        9/eSkpLt7ewOD+vs7OxtExEOCgoKDm1tbW3q6hIU7Pf39/eSku3t7W0KFPjqEAoMDxUUEhLqbW1tberq
        EhTs9/f3kpKS7e3t7UMKEAoOFG3r+OvrbW1tbW1t6uoSFOz39/eSkpLt7e3tbQoKQ234+Pjr621tbW1t
        bW3q6hIU7Pf395KSku3t7ewOCgoV6/j4+Ovr621tbW1tberq6hTs9/f3kpKS7e3tQwxtQwrq+Pj46+vr
        621tbW1t6urqFOz39/eSkpLt7W0KE+z4Dg5t+Pjr6+vrbW1tbW3q6hIU7Pf395KSku3tEBD47OxtCg9t
        +Ovr6+ttbW1tberqEhTs9/f3kpKS7esK6uzs7OwTCkNt6+vr621tbW1t6uoSFOz39/eSkpLtFA747Ozs
        7OwRChPr6+vrbW1tbW3q6hIU7Pf395KSku0MQ+zs7Ozs7PgPChNt6+ttbW1tberqEhTs9/f3kpKS7AoS
        7Ozs7Ozs7G0MDOpt621tbW1t6uoSFOz39/eSkpJtCm3s7Ozs7Ozs+BIKD+ptbW1tbW3q6hIU7Pf395KS
        khIKbezs7Oxt6/j4+BMKD21tbW1tberqEhTs9/f3kpKSEwrr7OzsDwoKE+v4+EMKEOptbW1t6uoSFOz3
        9/eSkpISCuvs7BIKCgoObfj46xAKEOptbW3q6hIU7Pf395KSkuzq7O3sEwoKCg5t+PjrbRAKEOptberq
        6hTs9/f3kpKS7e3t7Oz4DAoKFOv4+OvrbQ8KEBLq6urqFOz39/eSkpLt7e3t7OzrE+r4+Pj46+vrbRAK
        DhPq6uoU7Pf395KSku3t7e3s7Ozs7Oz4+Pjr621tbRAKEBLq6hTs9/f3kpKSku3t7ezs7Ozs7Pj4+Ovr
        bW1tbRUT6urqFOz39/eSkpLt7e3t7Ozs7Ozs+Pj4+OvrbW1tbW1t6uoUbezs7Oz4+Pjr6+vr621tbW1t
        berq6hISEhISExMUFEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAEAAAABAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//
        AAD//wAA//8AAP//AAD//wAA
</value>
  </data>
</root>